on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-22.04
    env:
      TF_VAR_MATCHBOX_RPC_ENDPOINT: ${{ vars.MATCHBOX_RPC_ENDPOINT }}
      TF_VAR_MATCHBOX_CA_CERT:      ${{ secrets.MATCHBOX_CA_CERT }}
      TF_VAR_MATCHBOX_CLIENT_CERT:  ${{ secrets.MATCHBOX_CLIENT_CERT }}
      TF_VAR_MATCHBOX_CLIENT_KEY:   ${{ secrets.MATCHBOX_CLIENT_KEY }}
      TF_VAR_PASSWORD_HASH:         ${{ secrets.PASSWORD_HASH }}
      TF_VAR_SSH_AUTHORIZED_KEY:    ${{ vars.SSH_AUTHORIZED_KEY }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Get terraform version
        id: tf-version
        run: |
          echo "version=$(cat .terraform-version)" >> $GITHUB_OUTPUT
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ steps.tf-version.outputs.version }}
          cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}

      - uses: shmokmt/actions-setup-tfcmt@v2
      
      - uses: tailscale/github-action@main
        with:
          authkey: ${{ secrets.TAILSCALE_AUTH_KEY }}
      
      - name: Terraform lint
        run: |
          terraform fmt -recursive -check -diff
      - name: Terraform init
        run: |
          terraform init
      - name: Terraform validate
        run: |
          terraform validate
      - name: tflint
        uses: reviewdog/action-tflint@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          fail_on_error: true

      - name: Terraform plan
        run: |
          tfcmt plan -patch -- terraform plan -no-color -lock=false
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
      
      - name: Terraform apply
        if: github.event_name != 'pull_request'
        run: |
          terraform apply -auto-approve -no-color
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
    